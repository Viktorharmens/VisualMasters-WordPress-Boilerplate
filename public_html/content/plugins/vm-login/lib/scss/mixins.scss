@mixin pseudo($display: block, $pos: absolute, $content: ''){
    content: $content;
    display: $display;
    position: $pos;
}

@mixin css-triangle($color, $direction, $size: 6px, $position: absolute, $round: false){
    @include pseudo($pos: $position);
    width: 0;
    height: 0;
    @if $round {
        border-radius: 3px;
    }
    @if $direction == down {
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-top: $size solid $color;
        margin-top: 0 - round( $size / 2.5 );
    } @else if $direction == up {
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-bottom: $size solid $color;
        margin-bottom: 0 - round( $size / 2.5 );
    } @else if $direction == right {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-left: $size solid $color;
        margin-right: -$size;
    } @else if  $direction == left {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-right: $size solid $color;
        margin-left: -$size;
    }
}

@mixin box-shadow($string) {
	-webkit-box-shadow: $string;
	-moz-box-shadow:    $string;
	box-shadow:         $string;
}

@mixin border-radius ($radius: 5px) {
	-webkit-border-radius: $radius;
	-moz-border-radius:    $radius;
	border-radius:         $radius;

	-moz-background-clip:    padding;
	-webkit-background-clip: padding-box;
	background-clip:         padding-box;
}

@mixin border-radiuses ($topleft: 0, $topright: 0, $bottomright: 0, $bottomleft: 0) {
	-webkit-border-top-right-radius:    $topright;
	-webkit-border-bottom-right-radius: $bottomright;
	-webkit-border-bottom-left-radius:  $bottomleft;
	-webkit-border-top-left-radius:     $topleft;

	-moz-border-radius-topright:        $topright;
	-moz-border-radius-bottomright:     $bottomright;
	-moz-border-radius-bottomleft:      $bottomleft;
	-moz-border-radius-topleft:         $topleft;

	border-top-right-radius:            $topright;
	border-bottom-right-radius:         $bottomright;
	border-bottom-left-radius:          $bottomleft;
	border-top-left-radius:             $topleft;

	-moz-background-clip:    padding; 
	-webkit-background-clip: padding-box; 
	background-clip:         padding-box; 
}

@mixin opacity ($opacity: 0.5) {
	$ieOpacity: $opacity * 100;
	-ms-filter: 'progid:DXImageTransform.Microsoft.Alpha(Opacity='+$ieOpacity+')';
	filter: 'alpha(opacity='+$ieOpacity+')';
	-webkit-opacity: $opacity;
	-moz-opacity: $opacity;
	opacity: $opacity;
}

@mixin gradient-vertical ($startColor: #eee, $endColor: white) {
	background-color: $startColor;
	background: -webkit-gradient(linear, left top, left bottom, from($startColor), to($endColor));
	background: -webkit-linear-gradient(top, $startColor, $endColor);
	background: -moz-linear-gradient(top, $startColor, $endColor);
	background: -ms-linear-gradient(top, $startColor, $endColor);
	background: -o-linear-gradient(top, $startColor, $endColor);
}

@mixin gradient-horizontal ($startColor: #eee, $endColor: white) {
	background-color: $startColor;
	background: -webkit-gradient(linear, left top, right bottom, from($startColor), to($endColor));
	background: -webkit-linear-gradient(left, $startColor, $endColor);
	background: -moz-linear-gradient(left, $startColor, $endColor);
	background: -ms-linear-gradient(left, $startColor, $endColor);
	background: -o-linear-gradient(left, $startColor, $endColor);
}

@mixin gradient-angle ($startColor: #eee, $endColor: white, $angle: 45deg) {
	background-color: $startColor;
	background: -webkit-linear-gradient($angle, $startColor, $endColor);
	background: -moz-linear-gradient($angle, $startColor, $endColor);
	background: -ms-linear-gradient($angle, $startColor, $endColor);
	background: -o-linear-gradient($angle, $startColor, $endColor);
	background: linear-gradient($angle, $startColor, $endColor);
}

@mixin animate ($type: opacity, $time: 300ms, $transition: linear) {
    -webkit-transition: $type $time $transition;
    -moz-transition: $type $time $transition;
    -o-transition: $type $time $transition;
    -ms-transition: $type $time $transition;
    transition: $type $time $transition;
}

@mixin rotate ($deg) {
	-webkit-transform: rotate($deg);
	-moz-transform: rotate($deg);
	-ms-transform: rotate($deg);
	-o-transform: rotate($deg);
}

@mixin sprite($backgroundposition: 0 0) {
	background-image: url(../images/resources/sprite.png);
	background-position: $backgroundposition;
	background-size: 400px 400px;
	
	@media ($highdpi) {
		background-image: url(../images/resources/sprite@2x.png);
	}
}